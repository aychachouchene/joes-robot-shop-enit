{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CartService {\n  constructor(http) {\n    this.http = http;\n    this.cart = new BehaviorSubject([]);\n    this.http.get('/api/cart').subscribe({\n      next: cart => this.cart.next(cart)\n    });\n  }\n  getCart() {\n    return this.cart.asObservable();\n  }\n  add(product) {\n    const newCart = [...this.cart.getValue(), product];\n    this.cart.next(newCart);\n    this.http.post('/api/cart', newCart).subscribe(() => {\n      console.log('added ' + product.name + ' to cart!');\n    });\n  }\n  remove(product) {\n    let newCart = this.cart.getValue().filter(i => i !== product);\n    this.cart.next(newCart);\n    this.http.post('/api/cart', newCart).subscribe(() => {\n      console.log('removed ' + product.name + ' from cart!');\n    });\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { CartService };","map":{"version":3,"names":["BehaviorSubject","CartService","constructor","http","cart","get","subscribe","next","getCart","asObservable","add","product","newCart","getValue","post","console","log","name","remove","filter","i","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Admin\\OneDrive\\Documents\\TP WEB\\TP 3\\joes-robot-shop-enit\\src\\app\\cart\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { IProduct } from '../catalog/product.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  private cart: BehaviorSubject<IProduct[]> = new BehaviorSubject<IProduct[]>([]);\n\n  constructor(private http: HttpClient) {\n    this.http.get<IProduct[]>('/api/cart').subscribe({\n      next: (cart) => this.cart.next(cart),\n    });\n  }\n\n  getCart(): Observable<IProduct[]> {\n    return this.cart.asObservable();\n  }\n\n  add(product: IProduct) {\n    const newCart = [...this.cart.getValue(), product];\n    this.cart.next(newCart);\n    this.http.post('/api/cart', newCart).subscribe(() => {\n      console.log('added ' + product.name + ' to cart!');\n    });\n  }\n\n  remove(product: IProduct) {\n    let newCart = this.cart.getValue().filter((i) => i !== product);\n    this.cart.next(newCart);\n    this.http.post('/api/cart', newCart).subscribe(() => {\n      console.log('removed ' + product.name + ' from cart!');\n    });\n  }\n}"],"mappings":"AAEA,SAAqBA,eAAe,QAAQ,MAAM;;;AAIlD,MAGaC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,IAAI,GAAgC,IAAIJ,eAAe,CAAa,EAAE,CAAC;IAG7E,IAAI,CAACG,IAAI,CAACE,GAAG,CAAa,WAAW,CAAC,CAACC,SAAS,CAAC;MAC/CC,IAAI,EAAGH,IAAI,IAAK,IAAI,CAACA,IAAI,CAACG,IAAI,CAACH,IAAI;KACpC,CAAC;EACJ;EAEAI,OAAOA,CAAA;IACL,OAAO,IAAI,CAACJ,IAAI,CAACK,YAAY,EAAE;EACjC;EAEAC,GAAGA,CAACC,OAAiB;IACnB,MAAMC,OAAO,GAAG,CAAC,GAAG,IAAI,CAACR,IAAI,CAACS,QAAQ,EAAE,EAAEF,OAAO,CAAC;IAClD,IAAI,CAACP,IAAI,CAACG,IAAI,CAACK,OAAO,CAAC;IACvB,IAAI,CAACT,IAAI,CAACW,IAAI,CAAC,WAAW,EAAEF,OAAO,CAAC,CAACN,SAAS,CAAC,MAAK;MAClDS,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGL,OAAO,CAACM,IAAI,GAAG,WAAW,CAAC;IACpD,CAAC,CAAC;EACJ;EAEAC,MAAMA,CAACP,OAAiB;IACtB,IAAIC,OAAO,GAAG,IAAI,CAACR,IAAI,CAACS,QAAQ,EAAE,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKT,OAAO,CAAC;IAC/D,IAAI,CAACP,IAAI,CAACG,IAAI,CAACK,OAAO,CAAC;IACvB,IAAI,CAACT,IAAI,CAACW,IAAI,CAAC,WAAW,EAAEF,OAAO,CAAC,CAACN,SAAS,CAAC,MAAK;MAClDS,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGL,OAAO,CAACM,IAAI,GAAG,aAAa,CAAC;IACxD,CAAC,CAAC;EACJ;;;uBA3BWhB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXvB,WAAW;MAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;SAEP1B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}